{"ast":null,"code":"import _regeneratorRuntime from \"/Users/luischota/Desktop/vue/culqi-challenge/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/luischota/Desktop/vue/culqi-challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _typeof from \"/Users/luischota/Desktop/vue/culqi-challenge/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.self.js\";\nimport \"core-js/modules/es.global-this.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.reflect.get.js\";\nimport \"core-js/modules/es.reflect.to-string-tag.js\";\nimport \"core-js/modules/es.reflect.set.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.weak-map.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n/*!\n * pinia v2.1.6\n * (c) 2023 Eduardo San Martin Morote\n * @license MIT\n */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nvar activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\nvar setActivePinia = function setActivePinia(pinia) {\n  return activePinia = pinia;\n};\n/**\n * Get the currently active pinia if there is any.\n */\nvar getActivePinia = function getActivePinia() {\n  return hasInjectionContext() && inject(piniaSymbol) || activePinia;\n};\nvar piniaSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia') : /* istanbul ignore next */Symbol();\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n  return o && _typeof(o) === 'object' && Object.prototype.toString.call(o) === '[object Object]' && typeof o.toJSON !== 'function';\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nvar MutationType;\n(function (MutationType) {\n  /**\n   * Direct mutation of the state:\n   *\n   * - `store.name = 'new name'`\n   * - `store.$state.name = 'new name'`\n   * - `store.list.push('new item')`\n   */\n  MutationType[\"direct\"] = \"direct\";\n  /**\n   * Mutated the state with `$patch` and an object\n   *\n   * - `store.$patch({ name: 'newName' })`\n   */\n  MutationType[\"patchObject\"] = \"patch object\";\n  /**\n   * Mutated the state with `$patch` and a function\n   *\n   * - `store.$patch(state => state.name = 'newName')`\n   */\n  MutationType[\"patchFunction\"] = \"patch function\";\n  // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\nvar IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\nvar USE_DEVTOOLS = (process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = /*#__PURE__*/function () {\n  return (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window.window === window ? window : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' && self.self === self ? self : (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === 'object' && global.global === global ? global : (typeof globalThis === \"undefined\" ? \"undefined\" : _typeof(globalThis)) === 'object' ? globalThis : {\n    HTMLElement: null\n  };\n}();\nfunction bom(blob) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$autoBom = _ref.autoBom,\n    autoBom = _ref$autoBom === void 0 ? false : _ref$autoBom;\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xfeff), blob], {\n      type: blob.type\n    });\n  }\n  return blob;\n}\nfunction download(url, name, opts) {\n  var xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts);\n  };\n  xhr.onerror = function () {\n    console.error('could not download file');\n  };\n  xhr.send();\n}\nfunction corsEnabled(url) {\n  var xhr = new XMLHttpRequest();\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false);\n  try {\n    xhr.send();\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'));\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n    node.dispatchEvent(evt);\n  }\n}\nvar _navigator = (typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) === 'object' ? navigator : {\n  userAgent: ''\n};\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = /*#__PURE__*/function () {\n  return /Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent);\n}();\nvar saveAs = !IS_CLIENT ? function () {} // noop\n:\n// Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\ntypeof HTMLAnchorElement !== 'undefined' && 'download' in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs :\n// Use msSaveOrOpenBlob as a second approach\n'msSaveOrOpenBlob' in _navigator ? msSaveAs :\n// Fallback to using FileReader and a popup\nfileSaverSaveAs;\nfunction downloadSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n  var a = document.createElement('a');\n  a.download = name;\n  a.rel = 'noopener'; // tabnabbing\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob;\n    if (a.origin !== location.origin) {\n      if (corsEnabled(a.href)) {\n        download(blob, name, opts);\n      } else {\n        a.target = '_blank';\n        click(a);\n      }\n    } else {\n      click(a);\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob);\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 4e4); // 40s\n    setTimeout(function () {\n      click(a);\n    }, 0);\n  }\n}\nfunction msSaveAs(blob) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'download';\n  var opts = arguments.length > 2 ? arguments[2] : undefined;\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts);\n    } else {\n      var a = document.createElement('a');\n      a.href = blob;\n      a.target = '_blank';\n      setTimeout(function () {\n        click(a);\n      });\n    }\n  } else {\n    // @ts-ignore: works on windows\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n  }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank');\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...';\n  }\n  if (typeof blob === 'string') return download(blob, name, opts);\n  var force = blob.type === 'application/octet-stream';\n  var isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n  var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n  if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== 'undefined') {\n    // Safari doesn't allow downloading of blob URLs\n    var reader = new FileReader();\n    reader.onloadend = function () {\n      var url = reader.result;\n      if (typeof url !== 'string') {\n        popup = null;\n        throw new Error('Wrong reader.result type');\n      }\n      url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n      if (popup) {\n        popup.location.href = url;\n      } else {\n        location.assign(url);\n      }\n      popup = null; // reverse-tabnabbing #460\n    };\n\n    reader.readAsDataURL(blob);\n  } else {\n    var url = URL.createObjectURL(blob);\n    if (popup) popup.location.assign(url);else location.href = url;\n    popup = null; // reverse-tabnabbing #460\n    setTimeout(function () {\n      URL.revokeObjectURL(url);\n    }, 4e4); // 40s\n  }\n}\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nfunction toastMessage(message, type) {\n  var piniaMessage = '🍍 ' + message;\n  if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n    // No longer available :(\n    __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n  } else if (type === 'error') {\n    console.error(piniaMessage);\n  } else if (type === 'warn') {\n    console.warn(piniaMessage);\n  } else {\n    console.log(piniaMessage);\n  }\n}\nfunction isPinia(o) {\n  return '_a' in o && 'install' in o;\n}\n\n/**\n * This file contain devtools actions, they are not Pinia actions.\n */\n// ---\nfunction checkClipboardAccess() {\n  if (!('clipboard' in navigator)) {\n    toastMessage(\"Your browser doesn't support the Clipboard API\", 'error');\n    return true;\n  }\n}\nfunction checkNotFocusedError(error) {\n  if (error instanceof Error && error.message.toLowerCase().includes('document is not focused')) {\n    toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n    return true;\n  }\n  return false;\n}\nfunction actionGlobalCopyState(_x) {\n  return _actionGlobalCopyState.apply(this, arguments);\n}\nfunction _actionGlobalCopyState() {\n  _actionGlobalCopyState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(pinia) {\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          if (!checkClipboardAccess()) {\n            _context4.next = 2;\n            break;\n          }\n          return _context4.abrupt(\"return\");\n        case 2:\n          _context4.prev = 2;\n          _context4.next = 5;\n          return navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        case 5:\n          toastMessage('Global state copied to clipboard.');\n          _context4.next = 14;\n          break;\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](2);\n          if (!checkNotFocusedError(_context4.t0)) {\n            _context4.next = 12;\n            break;\n          }\n          return _context4.abrupt(\"return\");\n        case 12:\n          toastMessage(\"Failed to serialize the state. Check the console for more details.\", 'error');\n          console.error(_context4.t0);\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[2, 8]]);\n  }));\n  return _actionGlobalCopyState.apply(this, arguments);\n}\nfunction actionGlobalPasteState(_x2) {\n  return _actionGlobalPasteState.apply(this, arguments);\n}\nfunction _actionGlobalPasteState() {\n  _actionGlobalPasteState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(pinia) {\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!checkClipboardAccess()) {\n            _context5.next = 2;\n            break;\n          }\n          return _context5.abrupt(\"return\");\n        case 2:\n          _context5.prev = 2;\n          _context5.t0 = loadStoresState;\n          _context5.t1 = pinia;\n          _context5.t2 = JSON;\n          _context5.next = 8;\n          return navigator.clipboard.readText();\n        case 8:\n          _context5.t3 = _context5.sent;\n          _context5.t4 = _context5.t2.parse.call(_context5.t2, _context5.t3);\n          (0, _context5.t0)(_context5.t1, _context5.t4);\n          toastMessage('Global state pasted from clipboard.');\n          _context5.next = 20;\n          break;\n        case 14:\n          _context5.prev = 14;\n          _context5.t5 = _context5[\"catch\"](2);\n          if (!checkNotFocusedError(_context5.t5)) {\n            _context5.next = 18;\n            break;\n          }\n          return _context5.abrupt(\"return\");\n        case 18:\n          toastMessage(\"Failed to deserialize the state from clipboard. Check the console for more details.\", 'error');\n          console.error(_context5.t5);\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[2, 14]]);\n  }));\n  return _actionGlobalPasteState.apply(this, arguments);\n}\nfunction actionGlobalSaveState(_x3) {\n  return _actionGlobalSaveState.apply(this, arguments);\n}\nfunction _actionGlobalSaveState() {\n  _actionGlobalSaveState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(pinia) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          try {\n            saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n              type: 'text/plain;charset=utf-8'\n            }), 'pinia-state.json');\n          } catch (error) {\n            toastMessage(\"Failed to export the state as JSON. Check the console for more details.\", 'error');\n            console.error(error);\n          }\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return _actionGlobalSaveState.apply(this, arguments);\n}\nvar fileInput;\nfunction getFileOpener() {\n  if (!fileInput) {\n    fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.json';\n  }\n  function openFile() {\n    return new Promise(function (resolve, reject) {\n      fileInput.onchange = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var files, file;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              files = fileInput.files;\n              if (files) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", resolve(null));\n            case 3:\n              file = files.item(0);\n              if (file) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", resolve(null));\n            case 6:\n              _context.t0 = resolve;\n              _context.next = 9;\n              return file.text();\n            case 9:\n              _context.t1 = _context.sent;\n              _context.t2 = file;\n              _context.t3 = {\n                text: _context.t1,\n                file: _context.t2\n              };\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t3));\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      // @ts-ignore: TODO: changed from 4.3 to 4.4\n      fileInput.oncancel = function () {\n        return resolve(null);\n      };\n      fileInput.onerror = reject;\n      fileInput.click();\n    });\n  }\n  return openFile;\n}\nfunction actionGlobalOpenStateFile(_x4) {\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\nfunction _actionGlobalOpenStateFile() {\n  _actionGlobalOpenStateFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(pinia) {\n    var _open, result, text, file;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _open = getFileOpener();\n          _context7.next = 4;\n          return _open();\n        case 4:\n          result = _context7.sent;\n          if (result) {\n            _context7.next = 7;\n            break;\n          }\n          return _context7.abrupt(\"return\");\n        case 7:\n          text = result.text, file = result.file;\n          loadStoresState(pinia, JSON.parse(text));\n          toastMessage(\"Global state imported from \\\"\".concat(file.name, \"\\\".\"));\n          _context7.next = 16;\n          break;\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](0);\n          toastMessage(\"Failed to import the state from JSON. Check the console for more details.\", 'error');\n          console.error(_context7.t0);\n        case 16:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[0, 12]]);\n  }));\n  return _actionGlobalOpenStateFile.apply(this, arguments);\n}\nfunction loadStoresState(pinia, state) {\n  for (var key in state) {\n    var storeState = pinia.state.value[key];\n    if (storeState) {\n      Object.assign(storeState, state[key]);\n    }\n  }\n}\nfunction formatDisplay(display) {\n  return {\n    _custom: {\n      display: display\n    }\n  };\n}\nvar PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nvar PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n  return isPinia(store) ? {\n    id: PINIA_ROOT_ID,\n    label: PINIA_ROOT_LABEL\n  } : {\n    id: store.$id,\n    label: store.$id\n  };\n}\nfunction formatStoreForInspectorState(store) {\n  if (isPinia(store)) {\n    var storeNames = Array.from(store._s.keys());\n    var storeMap = store._s;\n    var _state = {\n      state: storeNames.map(function (storeId) {\n        return {\n          editable: true,\n          key: storeId,\n          value: store.state.value[storeId]\n        };\n      }),\n      getters: storeNames.filter(function (id) {\n        return storeMap.get(id)._getters;\n      }).map(function (id) {\n        var store = storeMap.get(id);\n        return {\n          editable: false,\n          key: id,\n          value: store._getters.reduce(function (getters, key) {\n            getters[key] = store[key];\n            return getters;\n          }, {})\n        };\n      })\n    };\n    return _state;\n  }\n  var state = {\n    state: Object.keys(store.$state).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store.$state[key]\n      };\n    })\n  };\n  // avoid adding empty getters\n  if (store._getters && store._getters.length) {\n    state.getters = store._getters.map(function (getterName) {\n      return {\n        editable: false,\n        key: getterName,\n        value: store[getterName]\n      };\n    });\n  }\n  if (store._customProperties.size) {\n    state.customProperties = Array.from(store._customProperties).map(function (key) {\n      return {\n        editable: true,\n        key: key,\n        value: store[key]\n      };\n    });\n  }\n  return state;\n}\nfunction formatEventData(events) {\n  if (!events) return {};\n  if (Array.isArray(events)) {\n    // TODO: handle add and delete for arrays and objects\n    return events.reduce(function (data, event) {\n      data.keys.push(event.key);\n      data.operations.push(event.type);\n      data.oldValue[event.key] = event.oldValue;\n      data.newValue[event.key] = event.newValue;\n      return data;\n    }, {\n      oldValue: {},\n      keys: [],\n      operations: [],\n      newValue: {}\n    });\n  } else {\n    return {\n      operation: formatDisplay(events.type),\n      key: formatDisplay(events.key),\n      oldValue: events.oldValue,\n      newValue: events.newValue\n    };\n  }\n}\nfunction formatMutationType(type) {\n  switch (type) {\n    case MutationType.direct:\n      return 'mutation';\n    case MutationType.patchFunction:\n      return '$patch';\n    case MutationType.patchObject:\n      return '$patch';\n    default:\n      return 'unknown';\n  }\n}\n\n// timeline can be paused when directly changing the state\nvar isTimelineActive = true;\nvar componentStateTypes = [];\nvar MUTATIONS_LAYER_ID = 'pinia:mutations';\nvar INSPECTOR_ID = 'pinia';\nvar assign$1 = Object.assign;\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nvar getStoreType = function getStoreType(id) {\n  return '🍍 ' + id;\n};\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nfunction registerPiniaDevtools(app, pinia) {\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app\n  }, function (api) {\n    if (typeof api.now !== 'function') {\n      toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n    }\n    api.addTimelineLayer({\n      id: MUTATIONS_LAYER_ID,\n      label: \"Pinia \\uD83C\\uDF4D\",\n      color: 0xe5df88\n    });\n    api.addInspector({\n      id: INSPECTOR_ID,\n      label: 'Pinia 🍍',\n      icon: 'storage',\n      treeFilterPlaceholder: 'Search stores',\n      actions: [{\n        icon: 'content_copy',\n        action: function action() {\n          actionGlobalCopyState(pinia);\n        },\n        tooltip: 'Serialize and copy the state'\n      }, {\n        icon: 'content_paste',\n        action: function () {\n          var _action = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n            return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return actionGlobalPasteState(pinia);\n                case 2:\n                  api.sendInspectorTree(INSPECTOR_ID);\n                  api.sendInspectorState(INSPECTOR_ID);\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n          function action() {\n            return _action.apply(this, arguments);\n          }\n          return action;\n        }(),\n        tooltip: 'Replace the state with the content of your clipboard'\n      }, {\n        icon: 'save',\n        action: function action() {\n          actionGlobalSaveState(pinia);\n        },\n        tooltip: 'Save the state as a JSON file'\n      }, {\n        icon: 'folder_open',\n        action: function () {\n          var _action2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n            return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return actionGlobalOpenStateFile(pinia);\n                case 2:\n                  api.sendInspectorTree(INSPECTOR_ID);\n                  api.sendInspectorState(INSPECTOR_ID);\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }));\n          function action() {\n            return _action2.apply(this, arguments);\n          }\n          return action;\n        }(),\n        tooltip: 'Import the state from a JSON file'\n      }],\n      nodeActions: [{\n        icon: 'restore',\n        tooltip: 'Reset the state (with \"$reset\")',\n        action: function action(nodeId) {\n          var store = pinia._s.get(nodeId);\n          if (!store) {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it wasn't found.\"), 'warn');\n          } else if (typeof store.$reset !== 'function') {\n            toastMessage(\"Cannot reset \\\"\".concat(nodeId, \"\\\" store because it doesn't have a \\\"$reset\\\" method implemented.\"), 'warn');\n          } else {\n            store.$reset();\n            toastMessage(\"Store \\\"\".concat(nodeId, \"\\\" reset.\"));\n          }\n        }\n      }]\n    });\n    api.on.inspectComponent(function (payload, ctx) {\n      var proxy = payload.componentInstance && payload.componentInstance.proxy;\n      if (proxy && proxy._pStores) {\n        var piniaStores = payload.componentInstance.proxy._pStores;\n        Object.values(piniaStores).forEach(function (store) {\n          payload.instanceData.state.push({\n            type: getStoreType(store.$id),\n            key: 'state',\n            editable: true,\n            value: store._isOptionsAPI ? {\n              _custom: {\n                value: toRaw(store.$state),\n                actions: [{\n                  icon: 'restore',\n                  tooltip: 'Reset the state of this store',\n                  action: function action() {\n                    return store.$reset();\n                  }\n                }]\n              }\n            } :\n            // NOTE: workaround to unwrap transferred refs\n            Object.keys(store.$state).reduce(function (state, key) {\n              state[key] = store.$state[key];\n              return state;\n            }, {})\n          });\n          if (store._getters && store._getters.length) {\n            payload.instanceData.state.push({\n              type: getStoreType(store.$id),\n              key: 'getters',\n              editable: false,\n              value: store._getters.reduce(function (getters, key) {\n                try {\n                  getters[key] = store[key];\n                } catch (error) {\n                  // @ts-expect-error: we just want to show it in devtools\n                  getters[key] = error;\n                }\n                return getters;\n              }, {})\n            });\n          }\n        });\n      }\n    });\n    api.on.getInspectorTree(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var stores = [pinia];\n        stores = stores.concat(Array.from(pinia._s.values()));\n        payload.rootNodes = (payload.filter ? stores.filter(function (store) {\n          return '$id' in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase());\n        }) : stores).map(formatStoreForInspectorTree);\n      }\n    });\n    api.on.getInspectorState(function (payload) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n        if (!inspectedStore) {\n          // this could be the selected store restored for a different project\n          // so it's better not to say anything here\n          return;\n        }\n        if (inspectedStore) {\n          payload.state = formatStoreForInspectorState(inspectedStore);\n        }\n      }\n    });\n    api.on.editInspectorState(function (payload, ctx) {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        var inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n        if (!inspectedStore) {\n          return toastMessage(\"store \\\"\".concat(payload.nodeId, \"\\\" not found\"), 'error');\n        }\n        var path = payload.path;\n        if (!isPinia(inspectedStore)) {\n          // access only the state\n          if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) {\n            path.unshift('$state');\n          }\n        } else {\n          // Root access, we can omit the `.value` because the devtools API does it for us\n          path.unshift('state');\n        }\n        isTimelineActive = false;\n        payload.set(inspectedStore, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n    api.on.editComponentState(function (payload) {\n      if (payload.type.startsWith('🍍')) {\n        var storeId = payload.type.replace(/^🍍\\s*/, '');\n        var store = pinia._s.get(storeId);\n        if (!store) {\n          return toastMessage(\"store \\\"\".concat(storeId, \"\\\" not found\"), 'error');\n        }\n        var path = payload.path;\n        if (path[0] !== 'state') {\n          return toastMessage(\"Invalid path for store \\\"\".concat(storeId, \"\\\":\\n\").concat(path, \"\\nOnly state can be modified.\"));\n        }\n        // rewrite the first entry to be able to directly set the state as\n        // well as any other path\n        path[0] = '$state';\n        isTimelineActive = false;\n        payload.set(store, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n  });\n}\nfunction addStoreToDevtools(app, store) {\n  if (!componentStateTypes.includes(getStoreType(store.$id))) {\n    componentStateTypes.push(getStoreType(store.$id));\n  }\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia 🍍',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes: componentStateTypes,\n    app: app,\n    settings: {\n      logStoreChanges: {\n        label: 'Notify about new/deleted stores',\n        type: 'boolean',\n        defaultValue: true\n      }\n      // useEmojis: {\n      //   label: 'Use emojis in messages ⚡️',\n      //   type: 'boolean',\n      //   defaultValue: true,\n      // },\n    }\n  }, function (api) {\n    // gracefully handle errors\n    var now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n    store.$onAction(function (_ref2) {\n      var after = _ref2.after,\n        onError = _ref2.onError,\n        name = _ref2.name,\n        args = _ref2.args;\n      var groupId = runningActionId++;\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🛫 ' + name,\n          subtitle: 'start',\n          data: {\n            store: formatDisplay(store.$id),\n            action: formatDisplay(name),\n            args: args\n          },\n          groupId: groupId\n        }\n      });\n      after(function (result) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: '🛬 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              result: result\n            },\n            groupId: groupId\n          }\n        });\n      });\n      onError(function (error) {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            logType: 'error',\n            title: '💥 ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args: args,\n              error: error\n            },\n            groupId: groupId\n          }\n        });\n      });\n    }, true);\n    store._customProperties.forEach(function (name) {\n      watch(function () {\n        return unref(store[name]);\n      }, function (newValue, oldValue) {\n        api.notifyComponentUpdate();\n        api.sendInspectorState(INSPECTOR_ID);\n        if (isTimelineActive) {\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              title: 'Change',\n              subtitle: name,\n              data: {\n                newValue: newValue,\n                oldValue: oldValue\n              },\n              groupId: activeAction\n            }\n          });\n        }\n      }, {\n        deep: true\n      });\n    });\n    store.$subscribe(function (_ref3, state) {\n      var events = _ref3.events,\n        type = _ref3.type;\n      api.notifyComponentUpdate();\n      api.sendInspectorState(INSPECTOR_ID);\n      if (!isTimelineActive) return;\n      // rootStore.state[store.id] = state\n      var eventData = {\n        time: now(),\n        title: formatMutationType(type),\n        data: assign$1({\n          store: formatDisplay(store.$id)\n        }, formatEventData(events)),\n        groupId: activeAction\n      };\n      if (type === MutationType.patchFunction) {\n        eventData.subtitle = '⤵️';\n      } else if (type === MutationType.patchObject) {\n        eventData.subtitle = '🧩';\n      } else if (events && !Array.isArray(events)) {\n        eventData.subtitle = events.type;\n      }\n      if (events) {\n        eventData.data['rawEvent(s)'] = {\n          _custom: {\n            display: 'DebuggerEvent',\n            type: 'object',\n            tooltip: 'raw DebuggerEvent[]',\n            value: events\n          }\n        };\n      }\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: eventData\n      });\n    }, {\n      detached: true,\n      flush: 'sync'\n    });\n    var hotUpdate = store._hotUpdate;\n    store._hotUpdate = markRaw(function (newStore) {\n      hotUpdate(newStore);\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: '🔥 ' + store.$id,\n          subtitle: 'HMR update',\n          data: {\n            store: formatDisplay(store.$id),\n            info: formatDisplay(\"HMR update\")\n          }\n        }\n      });\n      // update the devtools too\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n    });\n    var $dispose = store.$dispose;\n    store.$dispose = function () {\n      $dispose();\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n      api.getSettings().logStoreChanges && toastMessage(\"Disposed \\\"\".concat(store.$id, \"\\\" store \\uD83D\\uDDD1\"));\n    };\n    // trigger an update so it can display new registered stores\n    api.notifyComponentUpdate();\n    api.sendInspectorTree(INSPECTOR_ID);\n    api.sendInspectorState(INSPECTOR_ID);\n    api.getSettings().logStoreChanges && toastMessage(\"\\\"\".concat(store.$id, \"\\\" store installed \\uD83C\\uDD95\"));\n  });\n}\nvar runningActionId = 0;\nvar activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(store, actionNames, wrapWithProxy) {\n  // original actions of the store as they are given by pinia. We are going to override them\n  var actions = actionNames.reduce(function (storeActions, actionName) {\n    // use toRaw to avoid tracking #541\n    storeActions[actionName] = toRaw(store)[actionName];\n    return storeActions;\n  }, {});\n  var _loop = function _loop(actionName) {\n    store[actionName] = function () {\n      // the running action id is incremented in a before action hook\n      var _actionId = runningActionId;\n      var trackedStore = wrapWithProxy ? new Proxy(store, {\n        get: function get() {\n          activeAction = _actionId;\n          return Reflect.get.apply(Reflect, arguments);\n        },\n        set: function set() {\n          activeAction = _actionId;\n          return Reflect.set.apply(Reflect, arguments);\n        }\n      }) : store;\n      // For Setup Stores we need https://github.com/tc39/proposal-async-context\n      activeAction = _actionId;\n      var retValue = actions[actionName].apply(trackedStore, arguments);\n      // this is safer as async actions in Setup Stores would associate mutations done outside of the action\n      activeAction = undefined;\n      return retValue;\n    };\n  };\n  for (var actionName in actions) {\n    _loop(actionName);\n  }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\nfunction devtoolsPlugin(_ref4) {\n  var app = _ref4.app,\n    store = _ref4.store,\n    options = _ref4.options;\n  // HMR module\n  if (store.$id.startsWith('__hot:')) {\n    return;\n  }\n  // detect option api vs setup api\n  store._isOptionsAPI = !!options.state;\n  patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);\n  // Upgrade the HMR to also update the new actions\n  var originalHotUpdate = store._hotUpdate;\n  toRaw(store)._hotUpdate = function (newStore) {\n    originalHotUpdate.apply(this, arguments);\n    patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);\n  };\n  addStoreToDevtools(app,\n  // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n  store);\n}\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nfunction createPinia() {\n  var scope = effectScope(true);\n  // NOTE: here we could check the window object for a state and directly set it\n  // if there is anything like it with Vue 3 SSR\n  var state = scope.run(function () {\n    return ref({});\n  });\n  var _p = [];\n  // plugins added before calling app.use(pinia)\n  var toBeInstalled = [];\n  var pinia = markRaw({\n    install: function install(app) {\n      // this allows calling useStore() outside of a component setup after\n      // installing pinia's plugin\n      setActivePinia(pinia);\n      if (!isVue2) {\n        pinia._a = app;\n        app.provide(piniaSymbol, pinia);\n        app.config.globalProperties.$pinia = pinia;\n        /* istanbul ignore else */\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(app, pinia);\n        }\n        toBeInstalled.forEach(function (plugin) {\n          return _p.push(plugin);\n        });\n        toBeInstalled = [];\n      }\n    },\n    use: function use(plugin) {\n      if (!this._a && !isVue2) {\n        toBeInstalled.push(plugin);\n      } else {\n        _p.push(plugin);\n      }\n      return this;\n    },\n    _p: _p,\n    // it's actually undefined here\n    // @ts-expect-error\n    _a: null,\n    _e: scope,\n    _s: new Map(),\n    state: state\n  });\n  // pinia devtools rely on dev only features so they cannot be forced unless\n  // the dev build of Vue is used. Avoid old browsers like IE11.\n  if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n    pinia.use(devtoolsPlugin);\n  }\n  return pinia;\n}\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nvar isUseStore = function isUseStore(fn) {\n  return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nfunction patchObject(newState, oldState) {\n  // no need to go through symbols because they cannot be serialized anyway\n  for (var key in oldState) {\n    var subPatch = oldState[key];\n    // skip the whole sub tree\n    if (!(key in newState)) {\n      continue;\n    }\n    var targetValue = newState[key];\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && !isRef(subPatch) && !isReactive(subPatch)) {\n      newState[key] = patchObject(targetValue, subPatch);\n    } else {\n      // objects are either a bit more complex (e.g. refs) or primitives, so we\n      // just set the whole thing\n      if (isVue2) {\n        set(newState, key, subPatch);\n      } else {\n        newState[key] = subPatch;\n      }\n    }\n  }\n  return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n  // strip as much as possible from iife.prod\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return function () {};\n  }\n  return function (newModule) {\n    var pinia = hot.data.pinia || initialUseStore._pinia;\n    if (!pinia) {\n      // this store is still not used\n      return;\n    }\n    // preserve the pinia instance across loads\n    hot.data.pinia = pinia;\n    // console.log('got data', newStore)\n    for (var exportName in newModule) {\n      var useStore = newModule[exportName];\n      // console.log('checking for', exportName)\n      if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n        // console.log('Accepting update for', useStore.$id)\n        var id = useStore.$id;\n        if (id !== initialUseStore.$id) {\n          console.warn(\"The id of the store changed from \\\"\".concat(initialUseStore.$id, \"\\\" to \\\"\").concat(id, \"\\\". Reloading.\"));\n          // return import.meta.hot.invalidate()\n          return hot.invalidate();\n        }\n        var existingStore = pinia._s.get(id);\n        if (!existingStore) {\n          console.log(\"[Pinia]: skipping hmr because store doesn't exist yet\");\n          return;\n        }\n        useStore(pinia, existingStore);\n      }\n    }\n  };\n}\nvar noop = function noop() {};\nfunction addSubscription(subscriptions, callback, detached) {\n  var onCleanup = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop;\n  subscriptions.push(callback);\n  var removeSubscription = function removeSubscription() {\n    var idx = subscriptions.indexOf(callback);\n    if (idx > -1) {\n      subscriptions.splice(idx, 1);\n      onCleanup();\n    }\n  };\n  if (!detached && getCurrentScope()) {\n    onScopeDispose(removeSubscription);\n  }\n  return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  subscriptions.slice().forEach(function (callback) {\n    callback.apply(void 0, args);\n  });\n}\nvar fallbackRunWithContext = function fallbackRunWithContext(fn) {\n  return fn();\n};\nfunction mergeReactiveObjects(target, patchToApply) {\n  // Handle Map instances\n  if (target instanceof Map && patchToApply instanceof Map) {\n    patchToApply.forEach(function (value, key) {\n      return target.set(key, value);\n    });\n  }\n  // Handle Set instances\n  if (target instanceof Set && patchToApply instanceof Set) {\n    patchToApply.forEach(target.add, target);\n  }\n  // no need to go through symbols because they cannot be serialized anyway\n  for (var key in patchToApply) {\n    if (!patchToApply.hasOwnProperty(key)) continue;\n    var subPatch = patchToApply[key];\n    var targetValue = target[key];\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !isRef(subPatch) && !isReactive(subPatch)) {\n      // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n      // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n      // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n      target[key] = mergeReactiveObjects(targetValue, subPatch);\n    } else {\n      // @ts-expect-error: subPatch is a valid value\n      target[key] = subPatch;\n    }\n  }\n  return target;\n}\nvar skipHydrateSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia:skipHydration') : /* istanbul ignore next */Symbol();\nvar skipHydrateMap = /*#__PURE__*/new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nfunction skipHydrate(obj) {\n  return isVue2 ?\n  // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n  /* istanbul ignore next */\n  skipHydrateMap.set(obj, 1) && obj : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj) {\n  return isVue2 ? /* istanbul ignore next */!skipHydrateMap.has(obj) : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nvar assign = Object.assign;\nfunction isComputed(o) {\n  return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n  var state = options.state,\n    actions = options.actions,\n    getters = options.getters;\n  var initialState = pinia.state.value[id];\n  var store;\n  function setup() {\n    if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(pinia.state.value, id, state ? state() : {});\n      } else {\n        pinia.state.value[id] = state ? state() : {};\n      }\n    }\n    // avoid creating a state in pinia.state.value\n    var localState = process.env.NODE_ENV !== 'production' && hot ?\n    // use ref() to unwrap refs inside state TODO: check if this is still necessary\n    toRefs(ref(state ? state() : {}).value) : toRefs(pinia.state.value[id]);\n    return assign(localState, actions, Object.keys(getters || {}).reduce(function (computedGetters, name) {\n      if (process.env.NODE_ENV !== 'production' && name in localState) {\n        console.warn(\"[\\uD83C\\uDF4D]: A getter cannot have the same name as another state property. Rename one of them. Found with \\\"\".concat(name, \"\\\" in store \\\"\").concat(id, \"\\\".\"));\n      }\n      computedGetters[name] = markRaw(computed(function () {\n        setActivePinia(pinia);\n        // it was created just before\n        var store = pinia._s.get(id);\n        // allow cross using stores\n        /* istanbul ignore next */\n        if (isVue2 && !store._r) return;\n        // @ts-expect-error\n        // return getters![name].call(context, context)\n        // TODO: avoid reading the getter while assigning with a global variable\n        return getters[name].call(store, store);\n      }));\n      return computedGetters;\n    }, {}));\n  }\n  store = createSetupStore(id, setup, options, pinia, hot, true);\n  return store;\n}\nfunction createSetupStore($id, setup) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var pinia = arguments.length > 3 ? arguments[3] : undefined;\n  var hot = arguments.length > 4 ? arguments[4] : undefined;\n  var isOptionsStore = arguments.length > 5 ? arguments[5] : undefined;\n  var scope;\n  var optionsForPlugin = assign({\n    actions: {}\n  }, options);\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && !pinia._e.active) {\n    throw new Error('Pinia destroyed');\n  }\n  // watcher options for $subscribe\n  var $subscribeOptions = {\n    deep: true\n    // flush: 'post',\n  };\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production' && !isVue2) {\n    $subscribeOptions.onTrigger = function (event) {\n      /* istanbul ignore else */\n      if (isListening) {\n        debuggerEvents = event;\n        // avoid triggering this while the store is being built and the state is being set in pinia\n      } else if (isListening == false && !store._hotUpdating) {\n        // let patch send all the events together later\n        /* istanbul ignore else */\n        if (Array.isArray(debuggerEvents)) {\n          debuggerEvents.push(event);\n        } else {\n          console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n        }\n      }\n    };\n  }\n  // internal state\n  var isListening; // set to true at the end\n  var isSyncListening; // set to true at the end\n  var subscriptions = [];\n  var actionSubscriptions = [];\n  var debuggerEvents;\n  var initialState = pinia.state.value[$id];\n  // avoid setting the state for option stores if it is set\n  // by the setup\n  if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n    /* istanbul ignore if */\n    if (isVue2) {\n      set(pinia.state.value, $id, {});\n    } else {\n      pinia.state.value[$id] = {};\n    }\n  }\n  var hotState = ref({});\n  // avoid triggering too many listeners\n  // https://github.com/vuejs/pinia/issues/1129\n  var activeListener;\n  function $patch(partialStateOrMutator) {\n    var subscriptionMutation;\n    isListening = isSyncListening = false;\n    // reset the debugger events since patches are sync\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      debuggerEvents = [];\n    }\n    if (typeof partialStateOrMutator === 'function') {\n      partialStateOrMutator(pinia.state.value[$id]);\n      subscriptionMutation = {\n        type: MutationType.patchFunction,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    } else {\n      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n      subscriptionMutation = {\n        type: MutationType.patchObject,\n        payload: partialStateOrMutator,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    }\n    var myListenerId = activeListener = Symbol();\n    nextTick().then(function () {\n      if (activeListener === myListenerId) {\n        isListening = true;\n      }\n    });\n    isSyncListening = true;\n    // because we paused the watcher, we need to manually call the subscriptions\n    triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n  }\n  var $reset = isOptionsStore ? function $reset() {\n    var state = options.state;\n    var newState = state ? state() : {};\n    // we use a patch to group all changes into one single subscription\n    this.$patch(function ($state) {\n      assign($state, newState);\n    });\n  } : /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' ? function () {\n    throw new Error(\"\\uD83C\\uDF4D: Store \\\"\".concat($id, \"\\\" is built using the setup syntax and does not implement $reset().\"));\n  } : noop;\n  function $dispose() {\n    scope.stop();\n    subscriptions = [];\n    actionSubscriptions = [];\n    pinia._s[\"delete\"]($id);\n  }\n  /**\n   * Wraps an action to handle subscriptions.\n   *\n   * @param name - name of the action\n   * @param action - action to wrap\n   * @returns a wrapped action to handle subscriptions\n   */\n  function wrapAction(name, action) {\n    return function () {\n      setActivePinia(pinia);\n      var args = Array.from(arguments);\n      var afterCallbackList = [];\n      var onErrorCallbackList = [];\n      function after(callback) {\n        afterCallbackList.push(callback);\n      }\n      function onError(callback) {\n        onErrorCallbackList.push(callback);\n      }\n      // @ts-expect-error\n      triggerSubscriptions(actionSubscriptions, {\n        args: args,\n        name: name,\n        store: store,\n        after: after,\n        onError: onError\n      });\n      var ret;\n      try {\n        ret = action.apply(this && this.$id === $id ? this : store, args);\n        // handle sync errors\n      } catch (error) {\n        triggerSubscriptions(onErrorCallbackList, error);\n        throw error;\n      }\n      if (ret instanceof Promise) {\n        return ret.then(function (value) {\n          triggerSubscriptions(afterCallbackList, value);\n          return value;\n        })[\"catch\"](function (error) {\n          triggerSubscriptions(onErrorCallbackList, error);\n          return Promise.reject(error);\n        });\n      }\n      // trigger after callbacks\n      triggerSubscriptions(afterCallbackList, ret);\n      return ret;\n    };\n  }\n  var _hmrPayload = /*#__PURE__*/markRaw({\n    actions: {},\n    getters: {},\n    state: [],\n    hotState: hotState\n  });\n  var partialStore = {\n    _p: pinia,\n    // _s: scope,\n    $id: $id,\n    $onAction: addSubscription.bind(null, actionSubscriptions),\n    $patch: $patch,\n    $reset: $reset,\n    $subscribe: function $subscribe(callback) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var removeSubscription = addSubscription(subscriptions, callback, options.detached, function () {\n        return stopWatcher();\n      });\n      var stopWatcher = scope.run(function () {\n        return watch(function () {\n          return pinia.state.value[$id];\n        }, function (state) {\n          if (options.flush === 'sync' ? isSyncListening : isListening) {\n            callback({\n              storeId: $id,\n              type: MutationType.direct,\n              events: debuggerEvents\n            }, state);\n          }\n        }, assign({}, $subscribeOptions, options));\n      });\n      return removeSubscription;\n    },\n    $dispose: $dispose\n  };\n  /* istanbul ignore if */\n  if (isVue2) {\n    // start as non ready\n    partialStore._r = false;\n  }\n  var store = reactive(process.env.NODE_ENV !== 'production' || USE_DEVTOOLS ? assign({\n    _hmrPayload: _hmrPayload,\n    _customProperties: markRaw(new Set()) // devtools custom properties\n  }, partialStore\n  // must be added later\n  // setupStore\n  ) : partialStore);\n  // store the partial store now so the setup of stores can instantiate each other before they are finished without\n  // creating infinite loops.\n  pinia._s.set($id, store);\n  var runWithContext = pinia._a && pinia._a.runWithContext || fallbackRunWithContext;\n  // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n  var setupStore = pinia._e.run(function () {\n    scope = effectScope();\n    return runWithContext(function () {\n      return scope.run(setup);\n    });\n  });\n  // overwrite existing actions to support $onAction\n  for (var key in setupStore) {\n    var prop = setupStore[key];\n    if (isRef(prop) && !isComputed(prop) || isReactive(prop)) {\n      // mark it as a piece of state to be serialized\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        set(hotState.value, key, toRef(setupStore, key));\n        // createOptionStore directly sets the state in pinia.state.value so we\n        // can just skip that\n      } else if (!isOptionsStore) {\n        // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n        if (initialState && shouldHydrate(prop)) {\n          if (isRef(prop)) {\n            prop.value = initialState[key];\n          } else {\n            // probably a reactive object, lets recursively assign\n            // @ts-expect-error: prop is unknown\n            mergeReactiveObjects(prop, initialState[key]);\n          }\n        }\n        // transfer the ref to the pinia state to keep everything in sync\n        /* istanbul ignore if */\n        if (isVue2) {\n          set(pinia.state.value[$id], key, prop);\n        } else {\n          pinia.state.value[$id][key] = prop;\n        }\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.state.push(key);\n      }\n      // action\n    } else if (typeof prop === 'function') {\n      // @ts-expect-error: we are overriding the function we avoid wrapping if\n      var actionValue = process.env.NODE_ENV !== 'production' && hot ? prop : wrapAction(key, prop);\n      // this a hot module replacement store because the hotUpdate method needs\n      // to do it with the right context\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(setupStore, key, actionValue);\n      } else {\n        // @ts-expect-error\n        setupStore[key] = actionValue;\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.actions[key] = prop;\n      }\n      // list actions so they can be used in plugins\n      // @ts-expect-error\n      optionsForPlugin.actions[key] = prop;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // add getters for devtools\n      if (isComputed(prop)) {\n        _hmrPayload.getters[key] = isOptionsStore ?\n        // @ts-expect-error\n        options.getters[key] : prop;\n        if (IS_CLIENT) {\n          var getters = setupStore._getters || (\n          // @ts-expect-error: same\n          setupStore._getters = markRaw([]));\n          getters.push(key);\n        }\n      }\n    }\n  }\n  // add the state, getters, and action properties\n  /* istanbul ignore if */\n  if (isVue2) {\n    Object.keys(setupStore).forEach(function (key) {\n      set(store, key, setupStore[key]);\n    });\n  } else {\n    assign(store, setupStore);\n    // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n    // Make `storeToRefs()` work with `reactive()` #799\n    assign(toRaw(store), setupStore);\n  }\n  // use this instead of a computed with setter to be able to create it anywhere\n  // without linking the computed lifespan to wherever the store is first\n  // created.\n  Object.defineProperty(store, '$state', {\n    get: function get() {\n      return process.env.NODE_ENV !== 'production' && hot ? hotState.value : pinia.state.value[$id];\n    },\n    set: function set(state) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        throw new Error('cannot set hotState');\n      }\n      $patch(function ($state) {\n        assign($state, state);\n      });\n    }\n  });\n  // add the hotUpdate before plugins to allow them to override it\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    store._hotUpdate = markRaw(function (newStore) {\n      store._hotUpdating = true;\n      newStore._hmrPayload.state.forEach(function (stateKey) {\n        if (stateKey in store.$state) {\n          var newStateTarget = newStore.$state[stateKey];\n          var oldStateSource = store.$state[stateKey];\n          if (_typeof(newStateTarget) === 'object' && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {\n            patchObject(newStateTarget, oldStateSource);\n          } else {\n            // transfer the ref\n            newStore.$state[stateKey] = oldStateSource;\n          }\n        }\n        // patch direct access properties to allow store.stateProperty to work as\n        // store.$state.stateProperty\n        set(store, stateKey, toRef(newStore.$state, stateKey));\n      });\n      // remove deleted state properties\n      Object.keys(store.$state).forEach(function (stateKey) {\n        if (!(stateKey in newStore.$state)) {\n          del(store, stateKey);\n        }\n      });\n      // avoid devtools logging this as a mutation\n      isListening = false;\n      isSyncListening = false;\n      pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n      isSyncListening = true;\n      nextTick().then(function () {\n        isListening = true;\n      });\n      for (var actionName in newStore._hmrPayload.actions) {\n        var action = newStore[actionName];\n        set(store, actionName, wrapAction(actionName, action));\n      }\n      // TODO: does this work in both setup and option store?\n      var _loop2 = function _loop2() {\n        var getter = newStore._hmrPayload.getters[getterName];\n        var getterValue = isOptionsStore ?\n        // special handling of options api\n        computed(function () {\n          setActivePinia(pinia);\n          return getter.call(store, store);\n        }) : getter;\n        set(store, getterName, getterValue);\n      };\n      for (var getterName in newStore._hmrPayload.getters) {\n        _loop2();\n      }\n      // remove deleted getters\n      Object.keys(store._hmrPayload.getters).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.getters)) {\n          del(store, key);\n        }\n      });\n      // remove old actions\n      Object.keys(store._hmrPayload.actions).forEach(function (key) {\n        if (!(key in newStore._hmrPayload.actions)) {\n          del(store, key);\n        }\n      });\n      // update the values used in devtools and to allow deleting new properties later on\n      store._hmrPayload = newStore._hmrPayload;\n      store._getters = newStore._getters;\n      store._hotUpdating = false;\n    });\n  }\n  if (USE_DEVTOOLS) {\n    var nonEnumerable = {\n      writable: true,\n      configurable: true,\n      // avoid warning on devtools trying to display this property\n      enumerable: false\n    };\n    ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach(function (p) {\n      Object.defineProperty(store, p, assign({\n        value: store[p]\n      }, nonEnumerable));\n    });\n  }\n  /* istanbul ignore if */\n  if (isVue2) {\n    // mark the store as ready before plugins\n    store._r = true;\n  }\n  // apply all plugins\n  pinia._p.forEach(function (extender) {\n    /* istanbul ignore else */\n    if (USE_DEVTOOLS) {\n      var extensions = scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      });\n      Object.keys(extensions || {}).forEach(function (key) {\n        return store._customProperties.add(key);\n      });\n      assign(store, extensions);\n    } else {\n      assign(store, scope.run(function () {\n        return extender({\n          store: store,\n          app: pinia._a,\n          pinia: pinia,\n          options: optionsForPlugin\n        });\n      }));\n    }\n  });\n  if (process.env.NODE_ENV !== 'production' && store.$state && _typeof(store.$state) === 'object' && typeof store.$state.constructor === 'function' && !store.$state.constructor.toString().includes('[native code]')) {\n    console.warn(\"[\\uD83C\\uDF4D]: The \\\"state\\\" must be a plain object. It cannot be\\n\" + \"\\tstate: () => new MyClass()\\n\" + \"Found in store \\\"\".concat(store.$id, \"\\\".\"));\n  }\n  // only apply hydrate to option stores with an initial state in pinia\n  if (initialState && isOptionsStore && options.hydrate) {\n    options.hydrate(store.$state, initialState);\n  }\n  isListening = true;\n  isSyncListening = true;\n  return store;\n}\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n  var id;\n  var options;\n  var isSetupStore = typeof setup === 'function';\n  if (typeof idOrOptions === 'string') {\n    id = idOrOptions;\n    // the option store setup will contain the actual options in this case\n    options = isSetupStore ? setupOptions : setup;\n  } else {\n    options = idOrOptions;\n    id = idOrOptions.id;\n    if (process.env.NODE_ENV !== 'production' && typeof id !== 'string') {\n      throw new Error(\"[\\uD83C\\uDF4D]: \\\"defineStore()\\\" must be passed a store id as its first argument.\");\n    }\n  }\n  function useStore(pinia, hot) {\n    var hasContext = hasInjectionContext();\n    pinia =\n    // in test mode, ignore the argument provided as we can always retrieve a\n    // pinia instance with getActivePinia()\n    (process.env.NODE_ENV === 'test' && activePinia && activePinia._testing ? null : pinia) || (hasContext ? inject(piniaSymbol, null) : null);\n    if (pinia) setActivePinia(pinia);\n    if (process.env.NODE_ENV !== 'production' && !activePinia) {\n      throw new Error(\"[\\uD83C\\uDF4D]: \\\"getActivePinia()\\\" was called but there was no active Pinia. Did you forget to install pinia?\\n\" + \"\\tconst pinia = createPinia()\\n\" + \"\\tapp.use(pinia)\\n\" + \"This will fail in production.\");\n    }\n    pinia = activePinia;\n    if (!pinia._s.has(id)) {\n      // creating the store registers it in `pinia._s`\n      if (isSetupStore) {\n        createSetupStore(id, setup, options, pinia);\n      } else {\n        createOptionsStore(id, options, pinia);\n      }\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        // @ts-expect-error: not the right inferred type\n        useStore._pinia = pinia;\n      }\n    }\n    var store = pinia._s.get(id);\n    if (process.env.NODE_ENV !== 'production' && hot) {\n      var hotId = '__hot:' + id;\n      var newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);\n      hot._hotUpdate(newStore);\n      // cleanup the state properties and the store from the cache\n      delete pinia.state.value[hotId];\n      pinia._s[\"delete\"](hotId);\n    }\n    if (process.env.NODE_ENV !== 'production' && IS_CLIENT) {\n      var currentInstance = getCurrentInstance();\n      // save stores in instances to access them devtools\n      if (currentInstance && currentInstance.proxy &&\n      // avoid adding stores that are just built for hot module replacement\n      !hot) {\n        var vm = currentInstance.proxy;\n        var cache = '_pStores' in vm ? vm._pStores : vm._pStores = {};\n        cache[id] = store;\n      }\n    }\n    // StoreGeneric cannot be casted towards Store\n    return store;\n  }\n  useStore.$id = id;\n  return useStore;\n}\nvar mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n  mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nfunction mapStores() {\n  for (var _len2 = arguments.length, stores = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    stores[_key2] = arguments[_key2];\n  }\n  if (process.env.NODE_ENV !== 'production' && Array.isArray(stores[0])) {\n    console.warn(\"[\\uD83C\\uDF4D]: Directly pass all stores to \\\"mapStores()\\\" without putting them in an array:\\n\" + \"Replace\\n\" + \"\\tmapStores([useAuthStore, useCartStore])\\n\" + \"with\\n\" + \"\\tmapStores(useAuthStore, useCartStore)\\n\" + \"This will fail in production if not fixed.\");\n    stores = stores[0];\n  }\n  return stores.reduce(function (reduced, useStore) {\n    // @ts-expect-error: $id is added by defineStore\n    reduced[useStore.$id + mapStoreSuffix] = function () {\n      return useStore(this.$pinia);\n    };\n    return reduced;\n  }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    reduced[key] = function () {\n      return useStore(this.$pinia)[key];\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var store = useStore(this.$pinia);\n      var storeKey = keysOrMapper[key];\n      // for some reason TS is unable to infer the type of storeKey to be a\n      // function\n      return typeof storeKey === 'function' ? storeKey.call(this, store) : store[storeKey];\n    };\n    return reduced;\n  }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nvar mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapActions(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore;\n      return (_useStore = useStore(this.$pinia))[key].apply(_useStore, arguments);\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-expect-error\n    reduced[key] = function () {\n      var _useStore2;\n      return (_useStore2 = useStore(this.$pinia))[keysOrMapper[key]].apply(_useStore2, arguments);\n    };\n    return reduced;\n  }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        return useStore(this.$pinia)[key];\n      },\n      set: function set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[key] = value;\n      }\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce(function (reduced, key) {\n    // @ts-ignore\n    reduced[key] = {\n      get: function get() {\n        return useStore(this.$pinia)[keysOrMapper[key]];\n      },\n      set: function set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[keysOrMapper[key]] = value;\n      }\n    };\n    return reduced;\n  }, {});\n}\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nfunction storeToRefs(store) {\n  // See https://github.com/vuejs/pinia/issues/852\n  // It's easier to just use toRefs() even if it includes more stuff\n  if (isVue2) {\n    // @ts-expect-error: toRefs include methods and others\n    return toRefs(store);\n  } else {\n    store = toRaw(store);\n    var refs = {};\n    for (var key in store) {\n      var value = store[key];\n      if (isRef(value) || isReactive(value)) {\n        // @ts-expect-error: the key is state or getter\n        refs[key] =\n        // ---\n        toRef(store, key);\n      }\n    }\n    return refs;\n  }\n}\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nvar PiniaVuePlugin = function PiniaVuePlugin(_Vue) {\n  // Equivalent of\n  // app.config.globalProperties.$pinia = pinia\n  _Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      var options = this.$options;\n      if (options.pinia) {\n        var pinia = options.pinia;\n        // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n        /* istanbul ignore else */\n        if (!this._provided) {\n          var provideCache = {};\n          Object.defineProperty(this, '_provided', {\n            get: function get() {\n              return provideCache;\n            },\n            set: function set(v) {\n              return Object.assign(provideCache, v);\n            }\n          });\n        }\n        this._provided[piniaSymbol] = pinia;\n        // propagate the pinia instance in an SSR friendly way\n        // avoid adding it to nuxt twice\n        /* istanbul ignore else */\n        if (!this.$pinia) {\n          this.$pinia = pinia;\n        }\n        pinia._a = this;\n        if (IS_CLIENT) {\n          // this allows calling useStore() outside of a component setup after\n          // installing pinia's plugin\n          setActivePinia(pinia);\n        }\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(pinia._a, pinia);\n        }\n      } else if (!this.$pinia && options.parent && options.parent.$pinia) {\n        this.$pinia = options.parent.$pinia;\n      }\n    },\n    destroyed: function destroyed() {\n      delete this._pStores;\n    }\n  });\n};\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };","map":{"version":3,"names":["hasInjectionContext","inject","toRaw","watch","unref","markRaw","effectScope","ref","isVue2","isRef","isReactive","set","getCurrentScope","onScopeDispose","getCurrentInstance","reactive","toRef","del","nextTick","computed","toRefs","setupDevtoolsPlugin","activePinia","setActivePinia","pinia","getActivePinia","piniaSymbol","process","env","NODE_ENV","Symbol","isPlainObject","o","_typeof","Object","prototype","toString","call","toJSON","MutationType","IS_CLIENT","window","USE_DEVTOOLS","__VUE_PROD_DEVTOOLS__","_global","self","global","globalThis","HTMLElement","bom","blob","_ref","arguments","length","undefined","_ref$autoBom","autoBom","test","type","Blob","String","fromCharCode","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","_navigator","navigator","userAgent","isMacOSWebView","HTMLAnchorElement","downloadSaveAs","msSaveAs","fileSaverSaveAs","a","createElement","rel","href","origin","location","target","URL","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","isChromeIOS","FileReader","reader","onloadend","result","Error","replace","assign","readAsDataURL","toastMessage","message","piniaMessage","__VUE_DEVTOOLS_TOAST__","warn","log","isPinia","checkClipboardAccess","checkNotFocusedError","toLowerCase","includes","actionGlobalCopyState","_x","_actionGlobalCopyState","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","wrap","_callee4$","_context4","prev","next","abrupt","clipboard","writeText","JSON","stringify","state","value","t0","stop","actionGlobalPasteState","_x2","_actionGlobalPasteState","_callee5","_callee5$","_context5","loadStoresState","t1","t2","readText","t3","sent","t4","parse","t5","actionGlobalSaveState","_x3","_actionGlobalSaveState","_callee6","_callee6$","_context6","fileInput","getFileOpener","accept","openFile","Promise","resolve","reject","onchange","_callee","files","file","_callee$","_context","item","text","oncancel","actionGlobalOpenStateFile","_x4","_actionGlobalOpenStateFile","_callee7","_open","_callee7$","_context7","concat","key","storeState","formatDisplay","display","_custom","PINIA_ROOT_LABEL","PINIA_ROOT_ID","formatStoreForInspectorTree","store","id","label","$id","formatStoreForInspectorState","storeNames","Array","from","_s","keys","storeMap","map","storeId","editable","getters","filter","get","_getters","reduce","$state","getterName","_customProperties","size","customProperties","formatEventData","events","isArray","data","event","push","operations","oldValue","newValue","operation","formatMutationType","direct","patchFunction","patchObject","isTimelineActive","componentStateTypes","MUTATIONS_LAYER_ID","INSPECTOR_ID","assign$1","getStoreType","registerPiniaDevtools","app","logo","packageName","homepage","api","now","addTimelineLayer","color","addInspector","icon","treeFilterPlaceholder","actions","action","tooltip","_action","_callee2","_callee2$","_context2","sendInspectorTree","sendInspectorState","_action2","_callee3","_callee3$","_context3","nodeActions","nodeId","$reset","on","inspectComponent","payload","ctx","proxy","componentInstance","_pStores","piniaStores","values","forEach","instanceData","_isOptionsAPI","getInspectorTree","inspectorId","stores","rootNodes","getInspectorState","inspectedStore","editInspectorState","path","has","unshift","editComponentState","startsWith","addStoreToDevtools","settings","logStoreChanges","defaultValue","bind","Date","$onAction","_ref2","after","onError","args","groupId","runningActionId","addTimelineEvent","layerId","time","subtitle","activeAction","logType","notifyComponentUpdate","deep","$subscribe","_ref3","eventData","detached","flush","hotUpdate","_hotUpdate","newStore","info","$dispose","getSettings","patchActionForGrouping","actionNames","wrapWithProxy","storeActions","actionName","_loop","_actionId","trackedStore","Proxy","Reflect","retValue","devtoolsPlugin","_ref4","options","originalHotUpdate","_hmrPayload","createPinia","scope","run","_p","toBeInstalled","install","_a","provide","config","globalProperties","$pinia","plugin","use","_e","Map","isUseStore","fn","newState","oldState","subPatch","targetValue","acceptHMRUpdate","initialUseStore","hot","newModule","_pinia","exportName","useStore","invalidate","existingStore","noop","addSubscription","subscriptions","callback","onCleanup","removeSubscription","idx","indexOf","splice","triggerSubscriptions","_len","_key","slice","fallbackRunWithContext","mergeReactiveObjects","patchToApply","Set","add","hasOwnProperty","skipHydrateSymbol","skipHydrateMap","WeakMap","skipHydrate","obj","defineProperty","shouldHydrate","isComputed","effect","createOptionsStore","initialState","setup","localState","computedGetters","_r","createSetupStore","isOptionsStore","optionsForPlugin","active","$subscribeOptions","onTrigger","isListening","debuggerEvents","_hotUpdating","isSyncListening","actionSubscriptions","hotState","activeListener","$patch","partialStateOrMutator","subscriptionMutation","myListenerId","then","wrapAction","afterCallbackList","onErrorCallbackList","ret","partialStore","stopWatcher","runWithContext","setupStore","prop","actionValue","stateKey","newStateTarget","oldStateSource","_loop2","getter","getterValue","nonEnumerable","writable","configurable","enumerable","p","extender","extensions","constructor","hydrate","defineStore","idOrOptions","setupOptions","isSetupStore","hasContext","_testing","hotId","currentInstance","vm","cache","mapStoreSuffix","setMapStoreSuffix","suffix","mapStores","_len2","_key2","reduced","mapState","keysOrMapper","storeKey","mapGetters","mapActions","_useStore","_useStore2","mapWritableState","storeToRefs","refs","PiniaVuePlugin","_Vue","mixin","beforeCreate","$options","_provided","provideCache","v","parent","destroyed"],"sources":["/Users/luischota/Desktop/vue/culqi-challenge/node_modules/pinia/dist/pinia.mjs"],"sourcesContent":["/*!\n * pinia v2.1.6\n * (c) 2023 Eduardo San Martin Morote\n * @license MIT\n */\nimport { hasInjectionContext, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, getCurrentInstance, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nlet activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n// @ts-expect-error: cannot constrain the type of the return\nconst setActivePinia = (pinia) => (activePinia = pinia);\n/**\n * Get the currently active pinia if there is any.\n */\nconst getActivePinia = () => (hasInjectionContext() && inject(piniaSymbol)) || activePinia;\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n    return (o &&\n        typeof o === 'object' &&\n        Object.prototype.toString.call(o) === '[object Object]' &&\n        typeof o.toJSON !== 'function');\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nvar MutationType;\n(function (MutationType) {\n    /**\n     * Direct mutation of the state:\n     *\n     * - `store.name = 'new name'`\n     * - `store.$state.name = 'new name'`\n     * - `store.list.push('new item')`\n     */\n    MutationType[\"direct\"] = \"direct\";\n    /**\n     * Mutated the state with `$patch` and an object\n     *\n     * - `store.$patch({ name: 'newName' })`\n     */\n    MutationType[\"patchObject\"] = \"patch object\";\n    /**\n     * Mutated the state with `$patch` and a function\n     *\n     * - `store.$patch(state => state.name = 'newName')`\n     */\n    MutationType[\"patchFunction\"] = \"patch function\";\n    // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\nconst USE_DEVTOOLS = ((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\n    ? window\n    : typeof self === 'object' && self.self === self\n        ? self\n        : typeof global === 'object' && global.global === global\n            ? global\n            : typeof globalThis === 'object'\n                ? globalThis\n                : { HTMLElement: null })();\nfunction bom(blob, { autoBom = false } = {}) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (autoBom &&\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\n    }\n    return blob;\n}\nfunction download(url, name, opts) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n        saveAs(xhr.response, name, opts);\n    };\n    xhr.onerror = function () {\n        console.error('could not download file');\n    };\n    xhr.send();\n}\nfunction corsEnabled(url) {\n    const xhr = new XMLHttpRequest();\n    // use sync to avoid popup blocker\n    xhr.open('HEAD', url, false);\n    try {\n        xhr.send();\n    }\n    catch (e) { }\n    return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n    try {\n        node.dispatchEvent(new MouseEvent('click'));\n    }\n    catch (e) {\n        const evt = document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n        node.dispatchEvent(evt);\n    }\n}\nconst _navigator = \n typeof navigator === 'object' ? navigator : { userAgent: '' };\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\n    /AppleWebKit/.test(_navigator.userAgent) &&\n    !/Safari/.test(_navigator.userAgent))();\nconst saveAs = !IS_CLIENT\n    ? () => { } // noop\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\n        typeof HTMLAnchorElement !== 'undefined' &&\n            'download' in HTMLAnchorElement.prototype &&\n            !isMacOSWebView\n            ? downloadSaveAs\n            : // Use msSaveOrOpenBlob as a second approach\n                'msSaveOrOpenBlob' in _navigator\n                    ? msSaveAs\n                    : // Fallback to using FileReader and a popup\n                        fileSaverSaveAs;\nfunction downloadSaveAs(blob, name = 'download', opts) {\n    const a = document.createElement('a');\n    a.download = name;\n    a.rel = 'noopener'; // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n    if (typeof blob === 'string') {\n        // Support regular links\n        a.href = blob;\n        if (a.origin !== location.origin) {\n            if (corsEnabled(a.href)) {\n                download(blob, name, opts);\n            }\n            else {\n                a.target = '_blank';\n                click(a);\n            }\n        }\n        else {\n            click(a);\n        }\n    }\n    else {\n        // Support blobs\n        a.href = URL.createObjectURL(blob);\n        setTimeout(function () {\n            URL.revokeObjectURL(a.href);\n        }, 4e4); // 40s\n        setTimeout(function () {\n            click(a);\n        }, 0);\n    }\n}\nfunction msSaveAs(blob, name = 'download', opts) {\n    if (typeof blob === 'string') {\n        if (corsEnabled(blob)) {\n            download(blob, name, opts);\n        }\n        else {\n            const a = document.createElement('a');\n            a.href = blob;\n            a.target = '_blank';\n            setTimeout(function () {\n                click(a);\n            });\n        }\n    }\n    else {\n        // @ts-ignore: works on windows\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n    }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank');\n    if (popup) {\n        popup.document.title = popup.document.body.innerText = 'downloading...';\n    }\n    if (typeof blob === 'string')\n        return download(blob, name, opts);\n    const force = blob.type === 'application/octet-stream';\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\n        typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob URLs\n        const reader = new FileReader();\n        reader.onloadend = function () {\n            let url = reader.result;\n            if (typeof url !== 'string') {\n                popup = null;\n                throw new Error('Wrong reader.result type');\n            }\n            url = isChromeIOS\n                ? url\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n            if (popup) {\n                popup.location.href = url;\n            }\n            else {\n                location.assign(url);\n            }\n            popup = null; // reverse-tabnabbing #460\n        };\n        reader.readAsDataURL(blob);\n    }\n    else {\n        const url = URL.createObjectURL(blob);\n        if (popup)\n            popup.location.assign(url);\n        else\n            location.href = url;\n        popup = null; // reverse-tabnabbing #460\n        setTimeout(function () {\n            URL.revokeObjectURL(url);\n        }, 4e4); // 40s\n    }\n}\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nfunction toastMessage(message, type) {\n    const piniaMessage = '🍍 ' + message;\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n        // No longer available :(\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n    }\n    else if (type === 'error') {\n        console.error(piniaMessage);\n    }\n    else if (type === 'warn') {\n        console.warn(piniaMessage);\n    }\n    else {\n        console.log(piniaMessage);\n    }\n}\nfunction isPinia(o) {\n    return '_a' in o && 'install' in o;\n}\n\n/**\n * This file contain devtools actions, they are not Pinia actions.\n */\n// ---\nfunction checkClipboardAccess() {\n    if (!('clipboard' in navigator)) {\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\n        return true;\n    }\n}\nfunction checkNotFocusedError(error) {\n    if (error instanceof Error &&\n        error.message.toLowerCase().includes('document is not focused')) {\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n        return true;\n    }\n    return false;\n}\nasync function actionGlobalCopyState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        toastMessage('Global state copied to clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalPasteState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        loadStoresState(pinia, JSON.parse(await navigator.clipboard.readText()));\n        toastMessage('Global state pasted from clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalSaveState(pinia) {\n    try {\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n            type: 'text/plain;charset=utf-8',\n        }), 'pinia-state.json');\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nlet fileInput;\nfunction getFileOpener() {\n    if (!fileInput) {\n        fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = '.json';\n    }\n    function openFile() {\n        return new Promise((resolve, reject) => {\n            fileInput.onchange = async () => {\n                const files = fileInput.files;\n                if (!files)\n                    return resolve(null);\n                const file = files.item(0);\n                if (!file)\n                    return resolve(null);\n                return resolve({ text: await file.text(), file });\n            };\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\n            fileInput.oncancel = () => resolve(null);\n            fileInput.onerror = reject;\n            fileInput.click();\n        });\n    }\n    return openFile;\n}\nasync function actionGlobalOpenStateFile(pinia) {\n    try {\n        const open = getFileOpener();\n        const result = await open();\n        if (!result)\n            return;\n        const { text, file } = result;\n        loadStoresState(pinia, JSON.parse(text));\n        toastMessage(`Global state imported from \"${file.name}\".`);\n    }\n    catch (error) {\n        toastMessage(`Failed to import the state from JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nfunction loadStoresState(pinia, state) {\n    for (const key in state) {\n        const storeState = pinia.state.value[key];\n        if (storeState) {\n            Object.assign(storeState, state[key]);\n        }\n    }\n}\n\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\nconst PINIA_ROOT_LABEL = '🍍 Pinia (root)';\nconst PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n    return isPinia(store)\n        ? {\n            id: PINIA_ROOT_ID,\n            label: PINIA_ROOT_LABEL,\n        }\n        : {\n            id: store.$id,\n            label: store.$id,\n        };\n}\nfunction formatStoreForInspectorState(store) {\n    if (isPinia(store)) {\n        const storeNames = Array.from(store._s.keys());\n        const storeMap = store._s;\n        const state = {\n            state: storeNames.map((storeId) => ({\n                editable: true,\n                key: storeId,\n                value: store.state.value[storeId],\n            })),\n            getters: storeNames\n                .filter((id) => storeMap.get(id)._getters)\n                .map((id) => {\n                const store = storeMap.get(id);\n                return {\n                    editable: false,\n                    key: id,\n                    value: store._getters.reduce((getters, key) => {\n                        getters[key] = store[key];\n                        return getters;\n                    }, {}),\n                };\n            }),\n        };\n        return state;\n    }\n    const state = {\n        state: Object.keys(store.$state).map((key) => ({\n            editable: true,\n            key,\n            value: store.$state[key],\n        })),\n    };\n    // avoid adding empty getters\n    if (store._getters && store._getters.length) {\n        state.getters = store._getters.map((getterName) => ({\n            editable: false,\n            key: getterName,\n            value: store[getterName],\n        }));\n    }\n    if (store._customProperties.size) {\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\n            editable: true,\n            key,\n            value: store[key],\n        }));\n    }\n    return state;\n}\nfunction formatEventData(events) {\n    if (!events)\n        return {};\n    if (Array.isArray(events)) {\n        // TODO: handle add and delete for arrays and objects\n        return events.reduce((data, event) => {\n            data.keys.push(event.key);\n            data.operations.push(event.type);\n            data.oldValue[event.key] = event.oldValue;\n            data.newValue[event.key] = event.newValue;\n            return data;\n        }, {\n            oldValue: {},\n            keys: [],\n            operations: [],\n            newValue: {},\n        });\n    }\n    else {\n        return {\n            operation: formatDisplay(events.type),\n            key: formatDisplay(events.key),\n            oldValue: events.oldValue,\n            newValue: events.newValue,\n        };\n    }\n}\nfunction formatMutationType(type) {\n    switch (type) {\n        case MutationType.direct:\n            return 'mutation';\n        case MutationType.patchFunction:\n            return '$patch';\n        case MutationType.patchObject:\n            return '$patch';\n        default:\n            return 'unknown';\n    }\n}\n\n// timeline can be paused when directly changing the state\nlet isTimelineActive = true;\nconst componentStateTypes = [];\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\nconst INSPECTOR_ID = 'pinia';\nconst { assign: assign$1 } = Object;\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nconst getStoreType = (id) => '🍍 ' + id;\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nfunction registerPiniaDevtools(app, pinia) {\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia 🍍',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n    }, (api) => {\n        if (typeof api.now !== 'function') {\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        api.addTimelineLayer({\n            id: MUTATIONS_LAYER_ID,\n            label: `Pinia 🍍`,\n            color: 0xe5df88,\n        });\n        api.addInspector({\n            id: INSPECTOR_ID,\n            label: 'Pinia 🍍',\n            icon: 'storage',\n            treeFilterPlaceholder: 'Search stores',\n            actions: [\n                {\n                    icon: 'content_copy',\n                    action: () => {\n                        actionGlobalCopyState(pinia);\n                    },\n                    tooltip: 'Serialize and copy the state',\n                },\n                {\n                    icon: 'content_paste',\n                    action: async () => {\n                        await actionGlobalPasteState(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Replace the state with the content of your clipboard',\n                },\n                {\n                    icon: 'save',\n                    action: () => {\n                        actionGlobalSaveState(pinia);\n                    },\n                    tooltip: 'Save the state as a JSON file',\n                },\n                {\n                    icon: 'folder_open',\n                    action: async () => {\n                        await actionGlobalOpenStateFile(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Import the state from a JSON file',\n                },\n            ],\n            nodeActions: [\n                {\n                    icon: 'restore',\n                    tooltip: 'Reset the state (with \"$reset\")',\n                    action: (nodeId) => {\n                        const store = pinia._s.get(nodeId);\n                        if (!store) {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\n                        }\n                        else if (typeof store.$reset !== 'function') {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it doesn't have a \"$reset\" method implemented.`, 'warn');\n                        }\n                        else {\n                            store.$reset();\n                            toastMessage(`Store \"${nodeId}\" reset.`);\n                        }\n                    },\n                },\n            ],\n        });\n        api.on.inspectComponent((payload, ctx) => {\n            const proxy = (payload.componentInstance &&\n                payload.componentInstance.proxy);\n            if (proxy && proxy._pStores) {\n                const piniaStores = payload.componentInstance.proxy._pStores;\n                Object.values(piniaStores).forEach((store) => {\n                    payload.instanceData.state.push({\n                        type: getStoreType(store.$id),\n                        key: 'state',\n                        editable: true,\n                        value: store._isOptionsAPI\n                            ? {\n                                _custom: {\n                                    value: toRaw(store.$state),\n                                    actions: [\n                                        {\n                                            icon: 'restore',\n                                            tooltip: 'Reset the state of this store',\n                                            action: () => store.$reset(),\n                                        },\n                                    ],\n                                },\n                            }\n                            : // NOTE: workaround to unwrap transferred refs\n                                Object.keys(store.$state).reduce((state, key) => {\n                                    state[key] = store.$state[key];\n                                    return state;\n                                }, {}),\n                    });\n                    if (store._getters && store._getters.length) {\n                        payload.instanceData.state.push({\n                            type: getStoreType(store.$id),\n                            key: 'getters',\n                            editable: false,\n                            value: store._getters.reduce((getters, key) => {\n                                try {\n                                    getters[key] = store[key];\n                                }\n                                catch (error) {\n                                    // @ts-expect-error: we just want to show it in devtools\n                                    getters[key] = error;\n                                }\n                                return getters;\n                            }, {}),\n                        });\n                    }\n                });\n            }\n        });\n        api.on.getInspectorTree((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                let stores = [pinia];\n                stores = stores.concat(Array.from(pinia._s.values()));\n                payload.rootNodes = (payload.filter\n                    ? stores.filter((store) => '$id' in store\n                        ? store.$id\n                            .toLowerCase()\n                            .includes(payload.filter.toLowerCase())\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\n                    : stores).map(formatStoreForInspectorTree);\n            }\n        });\n        api.on.getInspectorState((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    // this could be the selected store restored for a different project\n                    // so it's better not to say anything here\n                    return;\n                }\n                if (inspectedStore) {\n                    payload.state = formatStoreForInspectorState(inspectedStore);\n                }\n            }\n        });\n        api.on.editInspectorState((payload, ctx) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (!isPinia(inspectedStore)) {\n                    // access only the state\n                    if (path.length !== 1 ||\n                        !inspectedStore._customProperties.has(path[0]) ||\n                        path[0] in inspectedStore.$state) {\n                        path.unshift('$state');\n                    }\n                }\n                else {\n                    // Root access, we can omit the `.value` because the devtools API does it for us\n                    path.unshift('state');\n                }\n                isTimelineActive = false;\n                payload.set(inspectedStore, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n        api.on.editComponentState((payload) => {\n            if (payload.type.startsWith('🍍')) {\n                const storeId = payload.type.replace(/^🍍\\s*/, '');\n                const store = pinia._s.get(storeId);\n                if (!store) {\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (path[0] !== 'state') {\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\n                }\n                // rewrite the first entry to be able to directly set the state as\n                // well as any other path\n                path[0] = '$state';\n                isTimelineActive = false;\n                payload.set(store, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n    });\n}\nfunction addStoreToDevtools(app, store) {\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\n        componentStateTypes.push(getStoreType(store.$id));\n    }\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia 🍍',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n        settings: {\n            logStoreChanges: {\n                label: 'Notify about new/deleted stores',\n                type: 'boolean',\n                defaultValue: true,\n            },\n            // useEmojis: {\n            //   label: 'Use emojis in messages ⚡️',\n            //   type: 'boolean',\n            //   defaultValue: true,\n            // },\n        },\n    }, (api) => {\n        // gracefully handle errors\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n        store.$onAction(({ after, onError, name, args }) => {\n            const groupId = runningActionId++;\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '🛫 ' + name,\n                    subtitle: 'start',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        action: formatDisplay(name),\n                        args,\n                    },\n                    groupId,\n                },\n            });\n            after((result) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        title: '🛬 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            result,\n                        },\n                        groupId,\n                    },\n                });\n            });\n            onError((error) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        logType: 'error',\n                        title: '💥 ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            error,\n                        },\n                        groupId,\n                    },\n                });\n            });\n        }, true);\n        store._customProperties.forEach((name) => {\n            watch(() => unref(store[name]), (newValue, oldValue) => {\n                api.notifyComponentUpdate();\n                api.sendInspectorState(INSPECTOR_ID);\n                if (isTimelineActive) {\n                    api.addTimelineEvent({\n                        layerId: MUTATIONS_LAYER_ID,\n                        event: {\n                            time: now(),\n                            title: 'Change',\n                            subtitle: name,\n                            data: {\n                                newValue,\n                                oldValue,\n                            },\n                            groupId: activeAction,\n                        },\n                    });\n                }\n            }, { deep: true });\n        });\n        store.$subscribe(({ events, type }, state) => {\n            api.notifyComponentUpdate();\n            api.sendInspectorState(INSPECTOR_ID);\n            if (!isTimelineActive)\n                return;\n            // rootStore.state[store.id] = state\n            const eventData = {\n                time: now(),\n                title: formatMutationType(type),\n                data: assign$1({ store: formatDisplay(store.$id) }, formatEventData(events)),\n                groupId: activeAction,\n            };\n            if (type === MutationType.patchFunction) {\n                eventData.subtitle = '⤵️';\n            }\n            else if (type === MutationType.patchObject) {\n                eventData.subtitle = '🧩';\n            }\n            else if (events && !Array.isArray(events)) {\n                eventData.subtitle = events.type;\n            }\n            if (events) {\n                eventData.data['rawEvent(s)'] = {\n                    _custom: {\n                        display: 'DebuggerEvent',\n                        type: 'object',\n                        tooltip: 'raw DebuggerEvent[]',\n                        value: events,\n                    },\n                };\n            }\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: eventData,\n            });\n        }, { detached: true, flush: 'sync' });\n        const hotUpdate = store._hotUpdate;\n        store._hotUpdate = markRaw((newStore) => {\n            hotUpdate(newStore);\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: '🔥 ' + store.$id,\n                    subtitle: 'HMR update',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        info: formatDisplay(`HMR update`),\n                    },\n                },\n            });\n            // update the devtools too\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n        });\n        const { $dispose } = store;\n        store.$dispose = () => {\n            $dispose();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n            api.getSettings().logStoreChanges &&\n                toastMessage(`Disposed \"${store.$id}\" store 🗑`);\n        };\n        // trigger an update so it can display new registered stores\n        api.notifyComponentUpdate();\n        api.sendInspectorTree(INSPECTOR_ID);\n        api.sendInspectorState(INSPECTOR_ID);\n        api.getSettings().logStoreChanges &&\n            toastMessage(`\"${store.$id}\" store installed 🆕`);\n    });\n}\nlet runningActionId = 0;\nlet activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(store, actionNames, wrapWithProxy) {\n    // original actions of the store as they are given by pinia. We are going to override them\n    const actions = actionNames.reduce((storeActions, actionName) => {\n        // use toRaw to avoid tracking #541\n        storeActions[actionName] = toRaw(store)[actionName];\n        return storeActions;\n    }, {});\n    for (const actionName in actions) {\n        store[actionName] = function () {\n            // the running action id is incremented in a before action hook\n            const _actionId = runningActionId;\n            const trackedStore = wrapWithProxy\n                ? new Proxy(store, {\n                    get(...args) {\n                        activeAction = _actionId;\n                        return Reflect.get(...args);\n                    },\n                    set(...args) {\n                        activeAction = _actionId;\n                        return Reflect.set(...args);\n                    },\n                })\n                : store;\n            // For Setup Stores we need https://github.com/tc39/proposal-async-context\n            activeAction = _actionId;\n            const retValue = actions[actionName].apply(trackedStore, arguments);\n            // this is safer as async actions in Setup Stores would associate mutations done outside of the action\n            activeAction = undefined;\n            return retValue;\n        };\n    }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\nfunction devtoolsPlugin({ app, store, options }) {\n    // HMR module\n    if (store.$id.startsWith('__hot:')) {\n        return;\n    }\n    // detect option api vs setup api\n    store._isOptionsAPI = !!options.state;\n    patchActionForGrouping(store, Object.keys(options.actions), store._isOptionsAPI);\n    // Upgrade the HMR to also update the new actions\n    const originalHotUpdate = store._hotUpdate;\n    toRaw(store)._hotUpdate = function (newStore) {\n        originalHotUpdate.apply(this, arguments);\n        patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions), !!store._isOptionsAPI);\n    };\n    addStoreToDevtools(app, \n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n    store);\n}\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nfunction createPinia() {\n    const scope = effectScope(true);\n    // NOTE: here we could check the window object for a state and directly set it\n    // if there is anything like it with Vue 3 SSR\n    const state = scope.run(() => ref({}));\n    let _p = [];\n    // plugins added before calling app.use(pinia)\n    let toBeInstalled = [];\n    const pinia = markRaw({\n        install(app) {\n            // this allows calling useStore() outside of a component setup after\n            // installing pinia's plugin\n            setActivePinia(pinia);\n            if (!isVue2) {\n                pinia._a = app;\n                app.provide(piniaSymbol, pinia);\n                app.config.globalProperties.$pinia = pinia;\n                /* istanbul ignore else */\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(app, pinia);\n                }\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\n                toBeInstalled = [];\n            }\n        },\n        use(plugin) {\n            if (!this._a && !isVue2) {\n                toBeInstalled.push(plugin);\n            }\n            else {\n                _p.push(plugin);\n            }\n            return this;\n        },\n        _p,\n        // it's actually undefined here\n        // @ts-expect-error\n        _a: null,\n        _e: scope,\n        _s: new Map(),\n        state,\n    });\n    // pinia devtools rely on dev only features so they cannot be forced unless\n    // the dev build of Vue is used. Avoid old browsers like IE11.\n    if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n        pinia.use(devtoolsPlugin);\n    }\n    return pinia;\n}\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nconst isUseStore = (fn) => {\n    return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nfunction patchObject(newState, oldState) {\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in oldState) {\n        const subPatch = oldState[key];\n        // skip the whole sub tree\n        if (!(key in newState)) {\n            continue;\n        }\n        const targetValue = newState[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            newState[key] = patchObject(targetValue, subPatch);\n        }\n        else {\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\n            // just set the whole thing\n            if (isVue2) {\n                set(newState, key, subPatch);\n            }\n            else {\n                newState[key] = subPatch;\n            }\n        }\n    }\n    return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n    // strip as much as possible from iife.prod\n    if (!(process.env.NODE_ENV !== 'production')) {\n        return () => { };\n    }\n    return (newModule) => {\n        const pinia = hot.data.pinia || initialUseStore._pinia;\n        if (!pinia) {\n            // this store is still not used\n            return;\n        }\n        // preserve the pinia instance across loads\n        hot.data.pinia = pinia;\n        // console.log('got data', newStore)\n        for (const exportName in newModule) {\n            const useStore = newModule[exportName];\n            // console.log('checking for', exportName)\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n                // console.log('Accepting update for', useStore.$id)\n                const id = useStore.$id;\n                if (id !== initialUseStore.$id) {\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\n                    // return import.meta.hot.invalidate()\n                    return hot.invalidate();\n                }\n                const existingStore = pinia._s.get(id);\n                if (!existingStore) {\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\n                    return;\n                }\n                useStore(pinia, existingStore);\n            }\n        }\n    };\n}\n\nconst noop = () => { };\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\n    subscriptions.push(callback);\n    const removeSubscription = () => {\n        const idx = subscriptions.indexOf(callback);\n        if (idx > -1) {\n            subscriptions.splice(idx, 1);\n            onCleanup();\n        }\n    };\n    if (!detached && getCurrentScope()) {\n        onScopeDispose(removeSubscription);\n    }\n    return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions, ...args) {\n    subscriptions.slice().forEach((callback) => {\n        callback(...args);\n    });\n}\n\nconst fallbackRunWithContext = (fn) => fn();\nfunction mergeReactiveObjects(target, patchToApply) {\n    // Handle Map instances\n    if (target instanceof Map && patchToApply instanceof Map) {\n        patchToApply.forEach((value, key) => target.set(key, value));\n    }\n    // Handle Set instances\n    if (target instanceof Set && patchToApply instanceof Set) {\n        patchToApply.forEach(target.add, target);\n    }\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in patchToApply) {\n        if (!patchToApply.hasOwnProperty(key))\n            continue;\n        const subPatch = patchToApply[key];\n        const targetValue = target[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            target.hasOwnProperty(key) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\n        }\n        else {\n            // @ts-expect-error: subPatch is a valid value\n            target[key] = subPatch;\n        }\n    }\n    return target;\n}\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\n    ? Symbol('pinia:skipHydration')\n    : /* istanbul ignore next */ Symbol();\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nfunction skipHydrate(obj) {\n    return isVue2\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj) {\n    return isVue2\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nconst { assign } = Object;\nfunction isComputed(o) {\n    return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n    const { state, actions, getters } = options;\n    const initialState = pinia.state.value[id];\n    let store;\n    function setup() {\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(pinia.state.value, id, state ? state() : {});\n            }\n            else {\n                pinia.state.value[id] = state ? state() : {};\n            }\n        }\n        // avoid creating a state in pinia.state.value\n        const localState = (process.env.NODE_ENV !== 'production') && hot\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n                toRefs(ref(state ? state() : {}).value)\n            : toRefs(pinia.state.value[id]);\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\n                console.warn(`[🍍]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\n            }\n            computedGetters[name] = markRaw(computed(() => {\n                setActivePinia(pinia);\n                // it was created just before\n                const store = pinia._s.get(id);\n                // allow cross using stores\n                /* istanbul ignore next */\n                if (isVue2 && !store._r)\n                    return;\n                // @ts-expect-error\n                // return getters![name].call(context, context)\n                // TODO: avoid reading the getter while assigning with a global variable\n                return getters[name].call(store, store);\n            }));\n            return computedGetters;\n        }, {}));\n    }\n    store = createSetupStore(id, setup, options, pinia, hot, true);\n    return store;\n}\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\n    let scope;\n    const optionsForPlugin = assign({ actions: {} }, options);\n    /* istanbul ignore if */\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\n        throw new Error('Pinia destroyed');\n    }\n    // watcher options for $subscribe\n    const $subscribeOptions = {\n        deep: true,\n        // flush: 'post',\n    };\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\n        $subscribeOptions.onTrigger = (event) => {\n            /* istanbul ignore else */\n            if (isListening) {\n                debuggerEvents = event;\n                // avoid triggering this while the store is being built and the state is being set in pinia\n            }\n            else if (isListening == false && !store._hotUpdating) {\n                // let patch send all the events together later\n                /* istanbul ignore else */\n                if (Array.isArray(debuggerEvents)) {\n                    debuggerEvents.push(event);\n                }\n                else {\n                    console.error('🍍 debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n                }\n            }\n        };\n    }\n    // internal state\n    let isListening; // set to true at the end\n    let isSyncListening; // set to true at the end\n    let subscriptions = [];\n    let actionSubscriptions = [];\n    let debuggerEvents;\n    const initialState = pinia.state.value[$id];\n    // avoid setting the state for option stores if it is set\n    // by the setup\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n        /* istanbul ignore if */\n        if (isVue2) {\n            set(pinia.state.value, $id, {});\n        }\n        else {\n            pinia.state.value[$id] = {};\n        }\n    }\n    const hotState = ref({});\n    // avoid triggering too many listeners\n    // https://github.com/vuejs/pinia/issues/1129\n    let activeListener;\n    function $patch(partialStateOrMutator) {\n        let subscriptionMutation;\n        isListening = isSyncListening = false;\n        // reset the debugger events since patches are sync\n        /* istanbul ignore else */\n        if ((process.env.NODE_ENV !== 'production')) {\n            debuggerEvents = [];\n        }\n        if (typeof partialStateOrMutator === 'function') {\n            partialStateOrMutator(pinia.state.value[$id]);\n            subscriptionMutation = {\n                type: MutationType.patchFunction,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        else {\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n            subscriptionMutation = {\n                type: MutationType.patchObject,\n                payload: partialStateOrMutator,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        const myListenerId = (activeListener = Symbol());\n        nextTick().then(() => {\n            if (activeListener === myListenerId) {\n                isListening = true;\n            }\n        });\n        isSyncListening = true;\n        // because we paused the watcher, we need to manually call the subscriptions\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n    }\n    const $reset = isOptionsStore\n        ? function $reset() {\n            const { state } = options;\n            const newState = state ? state() : {};\n            // we use a patch to group all changes into one single subscription\n            this.$patch(($state) => {\n                assign($state, newState);\n            });\n        }\n        : /* istanbul ignore next */\n            (process.env.NODE_ENV !== 'production')\n                ? () => {\n                    throw new Error(`🍍: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\n                }\n                : noop;\n    function $dispose() {\n        scope.stop();\n        subscriptions = [];\n        actionSubscriptions = [];\n        pinia._s.delete($id);\n    }\n    /**\n     * Wraps an action to handle subscriptions.\n     *\n     * @param name - name of the action\n     * @param action - action to wrap\n     * @returns a wrapped action to handle subscriptions\n     */\n    function wrapAction(name, action) {\n        return function () {\n            setActivePinia(pinia);\n            const args = Array.from(arguments);\n            const afterCallbackList = [];\n            const onErrorCallbackList = [];\n            function after(callback) {\n                afterCallbackList.push(callback);\n            }\n            function onError(callback) {\n                onErrorCallbackList.push(callback);\n            }\n            // @ts-expect-error\n            triggerSubscriptions(actionSubscriptions, {\n                args,\n                name,\n                store,\n                after,\n                onError,\n            });\n            let ret;\n            try {\n                ret = action.apply(this && this.$id === $id ? this : store, args);\n                // handle sync errors\n            }\n            catch (error) {\n                triggerSubscriptions(onErrorCallbackList, error);\n                throw error;\n            }\n            if (ret instanceof Promise) {\n                return ret\n                    .then((value) => {\n                    triggerSubscriptions(afterCallbackList, value);\n                    return value;\n                })\n                    .catch((error) => {\n                    triggerSubscriptions(onErrorCallbackList, error);\n                    return Promise.reject(error);\n                });\n            }\n            // trigger after callbacks\n            triggerSubscriptions(afterCallbackList, ret);\n            return ret;\n        };\n    }\n    const _hmrPayload = /*#__PURE__*/ markRaw({\n        actions: {},\n        getters: {},\n        state: [],\n        hotState,\n    });\n    const partialStore = {\n        _p: pinia,\n        // _s: scope,\n        $id,\n        $onAction: addSubscription.bind(null, actionSubscriptions),\n        $patch,\n        $reset,\n        $subscribe(callback, options = {}) {\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\n                    callback({\n                        storeId: $id,\n                        type: MutationType.direct,\n                        events: debuggerEvents,\n                    }, state);\n                }\n            }, assign({}, $subscribeOptions, options)));\n            return removeSubscription;\n        },\n        $dispose,\n    };\n    /* istanbul ignore if */\n    if (isVue2) {\n        // start as non ready\n        partialStore._r = false;\n    }\n    const store = reactive((process.env.NODE_ENV !== 'production') || USE_DEVTOOLS\n        ? assign({\n            _hmrPayload,\n            _customProperties: markRaw(new Set()), // devtools custom properties\n        }, partialStore\n        // must be added later\n        // setupStore\n        )\n        : partialStore);\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\n    // creating infinite loops.\n    pinia._s.set($id, store);\n    const runWithContext = (pinia._a && pinia._a.runWithContext) || fallbackRunWithContext;\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n    const setupStore = pinia._e.run(() => {\n        scope = effectScope();\n        return runWithContext(() => scope.run(setup));\n    });\n    // overwrite existing actions to support $onAction\n    for (const key in setupStore) {\n        const prop = setupStore[key];\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\n            // mark it as a piece of state to be serialized\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                set(hotState.value, key, toRef(setupStore, key));\n                // createOptionStore directly sets the state in pinia.state.value so we\n                // can just skip that\n            }\n            else if (!isOptionsStore) {\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n                if (initialState && shouldHydrate(prop)) {\n                    if (isRef(prop)) {\n                        prop.value = initialState[key];\n                    }\n                    else {\n                        // probably a reactive object, lets recursively assign\n                        // @ts-expect-error: prop is unknown\n                        mergeReactiveObjects(prop, initialState[key]);\n                    }\n                }\n                // transfer the ref to the pinia state to keep everything in sync\n                /* istanbul ignore if */\n                if (isVue2) {\n                    set(pinia.state.value[$id], key, prop);\n                }\n                else {\n                    pinia.state.value[$id][key] = prop;\n                }\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.state.push(key);\n            }\n            // action\n        }\n        else if (typeof prop === 'function') {\n            // @ts-expect-error: we are overriding the function we avoid wrapping if\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : wrapAction(key, prop);\n            // this a hot module replacement store because the hotUpdate method needs\n            // to do it with the right context\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(setupStore, key, actionValue);\n            }\n            else {\n                // @ts-expect-error\n                setupStore[key] = actionValue;\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.actions[key] = prop;\n            }\n            // list actions so they can be used in plugins\n            // @ts-expect-error\n            optionsForPlugin.actions[key] = prop;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            // add getters for devtools\n            if (isComputed(prop)) {\n                _hmrPayload.getters[key] = isOptionsStore\n                    ? // @ts-expect-error\n                        options.getters[key]\n                    : prop;\n                if (IS_CLIENT) {\n                    const getters = setupStore._getters ||\n                        // @ts-expect-error: same\n                        (setupStore._getters = markRaw([]));\n                    getters.push(key);\n                }\n            }\n        }\n    }\n    // add the state, getters, and action properties\n    /* istanbul ignore if */\n    if (isVue2) {\n        Object.keys(setupStore).forEach((key) => {\n            set(store, key, setupStore[key]);\n        });\n    }\n    else {\n        assign(store, setupStore);\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n        // Make `storeToRefs()` work with `reactive()` #799\n        assign(toRaw(store), setupStore);\n    }\n    // use this instead of a computed with setter to be able to create it anywhere\n    // without linking the computed lifespan to wherever the store is first\n    // created.\n    Object.defineProperty(store, '$state', {\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\n        set: (state) => {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                throw new Error('cannot set hotState');\n            }\n            $patch(($state) => {\n                assign($state, state);\n            });\n        },\n    });\n    // add the hotUpdate before plugins to allow them to override it\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production')) {\n        store._hotUpdate = markRaw((newStore) => {\n            store._hotUpdating = true;\n            newStore._hmrPayload.state.forEach((stateKey) => {\n                if (stateKey in store.$state) {\n                    const newStateTarget = newStore.$state[stateKey];\n                    const oldStateSource = store.$state[stateKey];\n                    if (typeof newStateTarget === 'object' &&\n                        isPlainObject(newStateTarget) &&\n                        isPlainObject(oldStateSource)) {\n                        patchObject(newStateTarget, oldStateSource);\n                    }\n                    else {\n                        // transfer the ref\n                        newStore.$state[stateKey] = oldStateSource;\n                    }\n                }\n                // patch direct access properties to allow store.stateProperty to work as\n                // store.$state.stateProperty\n                set(store, stateKey, toRef(newStore.$state, stateKey));\n            });\n            // remove deleted state properties\n            Object.keys(store.$state).forEach((stateKey) => {\n                if (!(stateKey in newStore.$state)) {\n                    del(store, stateKey);\n                }\n            });\n            // avoid devtools logging this as a mutation\n            isListening = false;\n            isSyncListening = false;\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n            isSyncListening = true;\n            nextTick().then(() => {\n                isListening = true;\n            });\n            for (const actionName in newStore._hmrPayload.actions) {\n                const action = newStore[actionName];\n                set(store, actionName, wrapAction(actionName, action));\n            }\n            // TODO: does this work in both setup and option store?\n            for (const getterName in newStore._hmrPayload.getters) {\n                const getter = newStore._hmrPayload.getters[getterName];\n                const getterValue = isOptionsStore\n                    ? // special handling of options api\n                        computed(() => {\n                            setActivePinia(pinia);\n                            return getter.call(store, store);\n                        })\n                    : getter;\n                set(store, getterName, getterValue);\n            }\n            // remove deleted getters\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\n                if (!(key in newStore._hmrPayload.getters)) {\n                    del(store, key);\n                }\n            });\n            // remove old actions\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\n                if (!(key in newStore._hmrPayload.actions)) {\n                    del(store, key);\n                }\n            });\n            // update the values used in devtools and to allow deleting new properties later on\n            store._hmrPayload = newStore._hmrPayload;\n            store._getters = newStore._getters;\n            store._hotUpdating = false;\n        });\n    }\n    if (USE_DEVTOOLS) {\n        const nonEnumerable = {\n            writable: true,\n            configurable: true,\n            // avoid warning on devtools trying to display this property\n            enumerable: false,\n        };\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\n            Object.defineProperty(store, p, assign({ value: store[p] }, nonEnumerable));\n        });\n    }\n    /* istanbul ignore if */\n    if (isVue2) {\n        // mark the store as ready before plugins\n        store._r = true;\n    }\n    // apply all plugins\n    pinia._p.forEach((extender) => {\n        /* istanbul ignore else */\n        if (USE_DEVTOOLS) {\n            const extensions = scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            }));\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\n            assign(store, extensions);\n        }\n        else {\n            assign(store, scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            })));\n        }\n    });\n    if ((process.env.NODE_ENV !== 'production') &&\n        store.$state &&\n        typeof store.$state === 'object' &&\n        typeof store.$state.constructor === 'function' &&\n        !store.$state.constructor.toString().includes('[native code]')) {\n        console.warn(`[🍍]: The \"state\" must be a plain object. It cannot be\\n` +\n            `\\tstate: () => new MyClass()\\n` +\n            `Found in store \"${store.$id}\".`);\n    }\n    // only apply hydrate to option stores with an initial state in pinia\n    if (initialState &&\n        isOptionsStore &&\n        options.hydrate) {\n        options.hydrate(store.$state, initialState);\n    }\n    isListening = true;\n    isSyncListening = true;\n    return store;\n}\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n    let id;\n    let options;\n    const isSetupStore = typeof setup === 'function';\n    if (typeof idOrOptions === 'string') {\n        id = idOrOptions;\n        // the option store setup will contain the actual options in this case\n        options = isSetupStore ? setupOptions : setup;\n    }\n    else {\n        options = idOrOptions;\n        id = idOrOptions.id;\n        if ((process.env.NODE_ENV !== 'production') && typeof id !== 'string') {\n            throw new Error(`[🍍]: \"defineStore()\" must be passed a store id as its first argument.`);\n        }\n    }\n    function useStore(pinia, hot) {\n        const hasContext = hasInjectionContext();\n        pinia =\n            // in test mode, ignore the argument provided as we can always retrieve a\n            // pinia instance with getActivePinia()\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\n                (hasContext ? inject(piniaSymbol, null) : null);\n        if (pinia)\n            setActivePinia(pinia);\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\n            throw new Error(`[🍍]: \"getActivePinia()\" was called but there was no active Pinia. Did you forget to install pinia?\\n` +\n                `\\tconst pinia = createPinia()\\n` +\n                `\\tapp.use(pinia)\\n` +\n                `This will fail in production.`);\n        }\n        pinia = activePinia;\n        if (!pinia._s.has(id)) {\n            // creating the store registers it in `pinia._s`\n            if (isSetupStore) {\n                createSetupStore(id, setup, options, pinia);\n            }\n            else {\n                createOptionsStore(id, options, pinia);\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                // @ts-expect-error: not the right inferred type\n                useStore._pinia = pinia;\n            }\n        }\n        const store = pinia._s.get(id);\n        if ((process.env.NODE_ENV !== 'production') && hot) {\n            const hotId = '__hot:' + id;\n            const newStore = isSetupStore\n                ? createSetupStore(hotId, setup, options, pinia, true)\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\n            hot._hotUpdate(newStore);\n            // cleanup the state properties and the store from the cache\n            delete pinia.state.value[hotId];\n            pinia._s.delete(hotId);\n        }\n        if ((process.env.NODE_ENV !== 'production') && IS_CLIENT) {\n            const currentInstance = getCurrentInstance();\n            // save stores in instances to access them devtools\n            if (currentInstance &&\n                currentInstance.proxy &&\n                // avoid adding stores that are just built for hot module replacement\n                !hot) {\n                const vm = currentInstance.proxy;\n                const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\n                cache[id] = store;\n            }\n        }\n        // StoreGeneric cannot be casted towards Store\n        return store;\n    }\n    useStore.$id = id;\n    return useStore;\n}\n\nlet mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n    mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nfunction mapStores(...stores) {\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\n        console.warn(`[🍍]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\n            `Replace\\n` +\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\n            `with\\n` +\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\n            `This will fail in production if not fixed.`);\n        stores = stores[0];\n    }\n    return stores.reduce((reduced, useStore) => {\n        // @ts-expect-error: $id is added by defineStore\n        reduced[useStore.$id + mapStoreSuffix] = function () {\n            return useStore(this.$pinia);\n        };\n        return reduced;\n    }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            reduced[key] = function () {\n                return useStore(this.$pinia)[key];\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function () {\n                const store = useStore(this.$pinia);\n                const storeKey = keysOrMapper[key];\n                // for some reason TS is unable to infer the type of storeKey to be a\n                // function\n                return typeof storeKey === 'function'\n                    ? storeKey.call(this, store)\n                    : store[storeKey];\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nconst mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapActions(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[key](...args);\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[key];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[key] = value);\n                },\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[keysOrMapper[key]];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\n                },\n            };\n            return reduced;\n        }, {});\n}\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nfunction storeToRefs(store) {\n    // See https://github.com/vuejs/pinia/issues/852\n    // It's easier to just use toRefs() even if it includes more stuff\n    if (isVue2) {\n        // @ts-expect-error: toRefs include methods and others\n        return toRefs(store);\n    }\n    else {\n        store = toRaw(store);\n        const refs = {};\n        for (const key in store) {\n            const value = store[key];\n            if (isRef(value) || isReactive(value)) {\n                // @ts-expect-error: the key is state or getter\n                refs[key] =\n                    // ---\n                    toRef(store, key);\n            }\n        }\n        return refs;\n    }\n}\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nconst PiniaVuePlugin = function (_Vue) {\n    // Equivalent of\n    // app.config.globalProperties.$pinia = pinia\n    _Vue.mixin({\n        beforeCreate() {\n            const options = this.$options;\n            if (options.pinia) {\n                const pinia = options.pinia;\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n                /* istanbul ignore else */\n                if (!this._provided) {\n                    const provideCache = {};\n                    Object.defineProperty(this, '_provided', {\n                        get: () => provideCache,\n                        set: (v) => Object.assign(provideCache, v),\n                    });\n                }\n                this._provided[piniaSymbol] = pinia;\n                // propagate the pinia instance in an SSR friendly way\n                // avoid adding it to nuxt twice\n                /* istanbul ignore else */\n                if (!this.$pinia) {\n                    this.$pinia = pinia;\n                }\n                pinia._a = this;\n                if (IS_CLIENT) {\n                    // this allows calling useStore() outside of a component setup after\n                    // installing pinia's plugin\n                    setActivePinia(pinia);\n                }\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(pinia._a, pinia);\n                }\n            }\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\n                this.$pinia = options.parent.$pinia;\n            }\n        },\n        destroyed() {\n            delete this._pStores;\n        },\n    });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}